

================================================================================Q: What is Amazon's background and the secret to its success?
A: Amazon, Earth's most 'Customer Centric' company, was founded by Jeff Bezos on July 5, 1994. It is an American multinational technology company focusing on E-Commerce, Cloud Computing, Artificial Intelligence, and Digital Streaming. Considered one of the Big Five companies in the United States Information Technology industry, Amazon is renowned for disrupting industries through technological innovation and mass scale. It is the world's largest online marketplace, AI assistant provider, and cloud computing platform, with a workforce of over six lakh employees globally. Amazon is the largest Internet company by revenue in the world and the second-largest private employer in the United States, holding the highest global brand valuation. The secret to Amazon’s success lies in 'The Leadership Principles of Amazon'.

Q: What are some interview preparation tips for Amazon?
A:
*   **Understand the Leadership Principles Well:** Amazonians take pride in their Leadership Principles. Knowing these principles and citing instances where you've applied them in real life will positively impact interviewers, showing genuine interest.
*   **Be Thorough with Data Structures and Algorithms:** Amazon appreciates great problem solvers. Demonstrate your logic structures and algorithmic problem-solving skills. A good understanding of Data Structures and Algorithms and having one or two strong projects will earn you brownie points.
*   **Use the STAR method to format your Response:** STAR stands for Situation, Task, Action, and Result. This structured method helps respond to behavioral-based interview questions by describing the situation, the task at hand, your action, and the result. Be prepared with a real-life story to describe using this method.
*   **Know and Describe your Strengths:** Don't be shy during interviews. Highlight your strengths properly and honestly when required, as interviewers won't know your skills otherwise.
*   **Discuss with your interviewer and keep the conversation going:** An interview is not a written exam. Ensure the interviewer understands your solutions by engaging them in conversation. Asking questions can also be helpful.

Q: What is the Amazon recruitment and interview process?
A:
*   **Recruiter Connect:** The best way to get noticed is to maintain a good LinkedIn profile and message recruiters. Candidates can also apply on the Amazon job portal, but a referral from an Amazon employee is suggested.
*   **Interview Rounds:** Amazon conducts four interview rounds alongside an initial coding test. The coding test consists of Data Structures and Algorithms problems.
    *   **HR Round (1 Round):** Behavioral questions and Computer Science theory questions are asked. Questions may cover previous work experience and conflicts faced with colleagues/managers.
    *   **Data Structures and Algorithms Rounds (3 Rounds):** Candidates are asked DS/Algo problems, with an expectation of production-ready code. Minor behavioral questions may also arise. Problem difficulty ranges from easy to hard, but they are not the sole deciding factor; Leadership Principles also come into play. Interviews are conducted on Amazon Chime.
*   **After Interviews:** The recruiter contacts the candidate with the verdict, considering both leadership principles and technical skills.
*   **Hired:** Once both the team and candidate are comfortable, the offer letter is prepared and shared.

Q: What are the Amazon interview rounds?
A: There are typically 5 rounds: 4 for Data Structures and Algorithms, 1 for System Design, and 1 for HR.

Q: Are Amazon interviews hard?
A: The difficulty of an interview depends on your preparation. Usually, questions asked in a standard Amazon interview range from Easy to Medium Level, but this can vary.

Q: How do I apply for a job at Amazon?
A: You can go to the Amazon Jobs portal and apply for any open role that matches your skill set.

Q: Can I apply for multiple roles at Amazon?
A: Yes, you can apply to any role that aligns with your interests and skills. You will be evaluated against the requirements for each role and can interview for different roles simultaneously.

Q: What are some questions one should ask the interviewer at Amazon?
A: It is good practice to ask about the company's culture, the current technology used for products, and future innovations. This shows long-term interest. You can also ask about the interviewer's personal experience at Amazon and what skills you should develop before joining.

Q: How to prepare for the coding interviews at Amazon?
A: Preparation involves extensive practice. Put a lot of effort into solving challenging problems on Data Structures and Algorithms. A good knowledge of fundamental Computer Science Concepts like Object-Oriented Programming, Computer Networks, and Operating Systems can also be helpful.

Q: Does Amazon have a dress code?
A: No, Amazon does not have a formal dress code. However, all employees are expected to wear decent clothes at their respective places of work.

Q: Is having a project on Web or Android Development or Machine Learning a must for being hired at Amazon?
A: No, only good problem-solving skills are required to get hired at Amazon for an SDE position. However, having one or two good projects on your resume can earn you brownie points, as it demonstrates your interest and engagement in that domain.

Q: Problem Statement: Check if strings are rotations of each other or not. Given two strings s1 and s2. The task is to check if s2 is a rotated version of the string s1. The characters in the strings are in lowercase.
Test Case 1:
Input: mightandmagic andmagicmigth
Output: 0
Explanation: Here with any amount of rotation s2 cannot be obtained by s1.
Your Task: The task is to complete the function `areRotations()` which checks if the two strings are rotations of each other. The function returns true if string 1 can be obtained by rotating string 2, else it returns false.
Expected Time Complexity: O(N).
Expected Space Complexity: O(N).
Note: N = |s1|.
Constraints: 1 <= |s1|, |s2| <= 10^7

Q: Problem Statement: Jarvis is weak in computing palindromes for Alphanumeric characters. While Ironman is busy fighting Thanos, he needs to activate sonic punch but Jarvis is stuck in computing palindromes. You are given a string containing alphanumeric characters. Find out whether the string is a palindrome or not. If you are unable to solve it then it may result in the death of Iron Man.
Test Case 1:
Input: S = “I am :IronnorI Ma, i”
Output: YES
Explanation: Ignore all the symbols and whitespaces. S becomes “IamIronnorIMai”. Now, Check for palindrome ignoring uppercase and lowercase English letter.
Test Case 2:
Input: S = Ab?/Ba
Output: YES
Your Task: This is a function problem. The input is already taken care of by the driver code. You only need to complete the function `saveIronman()` that takes a string (ch), and returns true if the string is a palindrome and false if the string is not a palindrome. The driver code takes care of the printing.
Expected Time Complexity: O(N).
Expected Space Complexity: O(1).
Note: N = |s1|.
Constraints: 1 ≤ |S| ≤ 100000. Consider alphabets and numbers only for palindrome check. Ignore symbols and whitespaces.

Q: Problem Statement: Given a binary tree, print the bottom view from left to right. A node is included in bottom view if it can be seen when we look at the tree from bottom.
Example Tree 1:
    1
   / \
  5   3
The bottom view is 5 1 3.
If there are multiple bottom-most nodes for a horizontal distance from root, then print the later one in level traversal.
Example Tree 2:
    1
   / \
  5   3
 / \ / \
10 14 4 25
For the above tree, 3 and 4 are both the bottommost nodes at horizontal distance 0, we need to print 4. The output should be 5 10 4 14 25.
Example 1:
Input:
    1
   / \
  3   2
Output: 3 1 2
Explanation: First case represents a tree with 3 nodes and 2 edges where root is 1, left child of 1 is 3 and right child of 1 is 2.
Example 2:
Input:
    20
   / \
  10  30
 / \
40  60
Output: 40 20 60 30
Your Task: This is a functional problem, you don’t need to care about input, just complete the function `bottomView()` which takes the root node of the tree as input and returns an array containing the bottom view of the given tree.
Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).
Constraints:
1 <= Number of nodes <= 10^5
1 <= Data of a node <= 10^5

Q: Problem Statement: An expression is called the postfix expression if the operator appears in the expression after the operands.
Example:
Infix expression: A + B * C – D
Postfix expression: A B + C D – *
Given a postfix expression, the task is to evaluate the expression. The answer could be very large, output your answer modulo (10^9+7). Also, use modular division when required.
Note:
1. Operators will only include the basic arithmetic operators like ‘*’, ‘/’, ‘+’, and ‘-’.
2. The operand can contain multiple digits.
3. The operators and operands will have space as a separator between them.
4. There won’t be any brackets in the postfix expression.
Input Format:
The first line of input contains an integer ‘T’ denoting the number of test cases.
Each subsequent line represents a test case, containing a postfix expression.
Output Format:
For each test case, print an integer obtained by evaluating the given postfix expression.
Note: You are not required to print the expected output; it has already been taken care of. Just implement the function.
Constraints:
1 <= T <= 100
1 <= N <= 10^3 (where ‘N’ denotes the length of postfix expression)
1 <= NUM <= 100 (where ‘NUM’ denotes the operand)
Time Limit: 1 sec
Sample Input 1:
```
2
2 3 1 * + 9 –
1 2 3 + * 8 –
```
Sample Output 1:
```
-4
-3
```
Explanation of Sample Input 1:
*Test case 1: `2 3 1 * + 9 –`*
Result = `(2 + (3 * 1)) – 9 = (2 + 3) – 9 = 5 – 9 = -4`
*Test case 2: `1 2 3 + * 8 –`*
Result = `(1 * (2 + 3)) – 8 = (1 * 5) – 8 = 5 – 8 = -3`
Sample Input 2:
```
100 200 + 2 / 5 * 7 +
```
Sample Output 2:
```
757
```
Explanation of Sample Input 2:
`100 + 200 = 300`
`300 / 2 = 150`
`150 * 5 = 750`
`750 + 7 = 757`

Q: Asked in: Infosys Placement Paper – Feb 2022
Problem Statement: You are given a binary tree. The task is to find out the length of the longest path which contains nodes with the exact same value. It is not necessary for the path to pass through the root of the binary tree. Between two nodes, the length of the path can be defined as the number of edges contained between them.
For example, consider the following binary tree:
    7
   / \
  7   7
 / \   \
8   3   7
For the above tree, the length of the longest path where each node in the path has the same value is 3, and the path is 7 -> 7 -> 7 -> 7 (referring to the path from the left 7 (child of root's left 7) to the rightmost 7).
Input Format:
The first line of input contains an integer ‘T’ representing the number of test cases.
Then, the test cases follow.
The only line of each test case contains elements in level order form, separated by a single space. In case a node is null, we take -1 in its place.
*Example Input for a tree:* `1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1`
(This represents a tree where 1 is root, 2 and 3 are its children, 4 and null are children of 2, 5 and 6 are children of 3, etc.)
Output Format:
For each test case, a single integer denoting the length of the longest path where each node in the path has the same value is printed on a separate line.
Note: You do not need to print anything; it has already been taken care of. Just implement the given function.
Constraints:
1 <= T <= 100
1 <= N <= 3000 (where ‘N’ is the total number of nodes in the binary tree)
-10^9 <= data <= 10^9 and data != -1
Time Limit: 1 sec
Sample Input 1:
```
7 7 7 1 1 -1 7 -1 -1 -1 -1 -1 -1
10 3 4 3 3 -1 5 -1 -1 -1 -1 -1 -1
```
Sample Output 1:
```
3
2
```
Explanation of Sample Input 1:
*First test case:*
    7
   / \
  7   7
 / \   \
1   1   7
For the first test case, the length of the longest path where each node in the path has the same value is 3, and the path is 7 -> 7 -> 7 -> 7.
*Second test case:*
    10
   /  \
  3    4
 / \   \
3   3   5
For the second test case, the length of the longest path where each node in the path has the same value is 2, and the path is 3 -> 3 -> 3.
Sample Input 2:
```
1 4 5 4 4 -1 5 -1 -1 -1 -1 -1 -1
5 4 5 1 1 -1 5 -1 -1 -1 -1 -1 -1
```
Sample Output 2:
```
2
1
```